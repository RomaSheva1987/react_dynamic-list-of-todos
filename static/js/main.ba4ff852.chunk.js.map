{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","options","filter","setFilter","searchValue","setSearchValue","value","onChange","event","target","option","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userId","useEffect","getUser","href","name","filterOptions","App","todosFromServer","setTodosFromServer","validValue","toLowerCase","trimStart","visibleTodos","useMemo","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba4ff852.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={selectedTodo ? (\n              classNames(\n                { 'has-background-info-light': selectedTodo.id === todo.id },\n              )\n            ) : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={!todo.completed\n                  ? 'has-text-danger' : 'has-text-success'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  {selectedTodo && selectedTodo.id === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  options: string[];\n  filter: string;\n  setFilter: (value: string) => void\n  searchValue: string;\n  setSearchValue: (value: string) => void\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  options,\n  filter,\n  setFilter,\n  searchValue,\n  setSearchValue,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter}\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setFilter(event.target.value);\n            }}\n          >\n            {options.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={(event) => {\n            setSearchValue(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchValue && (\n            <label>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setSearchValue('');\n                }}\n              />\n            </label>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = selectedTodo;\n\n  useEffect(() => {\n    if (userId) {\n      getUser(userId)\n        .then(setUser);\n    }\n  }, [selectedTodo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {!completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const filterOptions = ['all', 'active', 'completed'];\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(filterOptions[0]);\n  const [searchValue, setSearchValue] = useState('');\n\n  const validValue = searchValue.toLowerCase().trimStart();\n\n  const normalizeTitle = (item: string) => item\n    .toLowerCase().includes(validValue);\n\n  useEffect(() => {\n    getTodos()\n      .then((todo) => setTodosFromServer(todo));\n  }, []);\n\n  const getFilteredTodos = () => {\n    switch (filter) {\n      case 'active':\n        return todosFromServer.filter(todo => !todo.completed);\n\n      case 'completed':\n        return todosFromServer.filter(todo => todo.completed);\n\n      default:\n        return todosFromServer;\n    }\n  };\n\n  const filteredTodos = useMemo(\n    getFilteredTodos,\n    [filter, todosFromServer],\n  );\n\n  const getVisibleTodos = () => {\n    return filteredTodos.filter(todo => normalizeTitle(todo.title));\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                options={filterOptions}\n                filter={filter}\n                setFilter={setFilter}\n                searchValue={searchValue}\n                setSearchValue={setSearchValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosFromServer.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}